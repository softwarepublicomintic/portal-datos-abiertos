diff --git a/field_collection.entity.inc b/field_collection.entity.inc
index a724775..7d06c56 100644
--- a/field_collection.entity.inc
+++ b/field_collection.entity.inc
@@ -215,9 +215,20 @@ public function setHostEntity($entity_type, $entity, $langcode = LANGUAGE_NONE,
    *
    * @param object $entity
    *   Host entity.
+   * @param string $host_entity_type
+   *   The entity type of the entity the field collection is attached to.
    */
-  public function updateHostEntity($entity) {
+  public function updateHostEntity($entity, $host_entity_type = NULL) {
     $this->fetchHostDetails();
+    // If isn't possible to retrieve hostEntityType due the fact that it's not
+    // saved in DB yet, then fill info about hostEntity manually. This happens
+    // when creating a new revision of field collection entity and it needs to
+    // relate to the new revision of the host entity.
+    if (!$this->hostEntityType) {
+      $this->hostEntityType = $host_entity_type;
+      $this->hostEntity = $entity;
+      list($this->hostEntityId, $this->hostEntityRevisionId) = entity_extract_ids($this->hostEntityType, $this->hostEntity);
+    }
     list($recieved_id) = entity_extract_ids($this->hostEntityType, $entity);
 
     if ($this->isInUse()) {
diff --git a/field_collection.module b/field_collection.module
index 259a521..d2a8f07 100644
--- a/field_collection.module
+++ b/field_collection.module
@@ -541,7 +541,7 @@ function field_collection_field_update($host_entity_type, $host_entity, $field,
           $entity->setHostEntity($host_entity_type, $host_entity, $langcode, FALSE);
         }
         else {
-          $entity->updateHostEntity($host_entity);
+          $entity->updateHostEntity($host_entity, $host_entity_type);
         }
 
         $entity->save(TRUE);
